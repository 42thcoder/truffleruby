#!/usr/bin/env bash

bin="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
root="$(dirname "$bin")"

set -e

function mtime {
    uname_str=$(uname)
    if [ "$uname_str" = 'Linux' ]; then
        stat -c '%Y' "$1" 2> /dev/null || echo 0
    elif [ "$uname_str" = 'Darwin' ]; then
        stat -f '%m' "$1" 2> /dev/null || echo 0
    else
        echo "unknown platform $uname_str"
        exit 1
    fi
}

if [ -n "${RUBY_BIN}" ]; then
    ${RUBY_BIN}
else
    mx_jar="$root"/mxbuild/dists/ruby.jar
    mvn_jar="$root"/lib/jruby-truffle.jar
    mx_time=$(mtime "$mx_jar")
    mvn_time=$(mtime "$mvn_jar")

    if [ "$mx_time" -gt "$mvn_time" ]; then
      exec mx -p "$root" ruby "$@"
    fi
fi

if [ -z "$JAVACMD" ]
then
  if [ -z "$JAVA_HOME" ]
  then
    JAVACMD='java'
  else
    JAVACMD="$JAVA_HOME/bin/java"
  fi
fi

declare -a java_args
declare -a ruby_args
print_command=""

# Split out any -J argument for passing to the JVM.
# Scanning for args is aborted by '--'.
set -- $JRUBY_OPTS "$@"
while [ $# -gt 0 ]
do
    case "$1" in
    -J-cmd)
        print_command="true"
        ;;
    -J*)
        val=${1:2}
        if [ "${val:0:1}" = ":" ]; then # -J:
            val=-${val:1}
        fi
        if [ "${val}" = "-classpath" ]; then
            CP="$CP:$2"
            shift
        elif [ "${val}" = "-cp" ]; then
            CP="$CP:$2"
            shift
        else
            java_args=("${java_args[@]}" "$val")
        fi
        ;;
     # Match switches that take an argument
     -C|-e|-I|-S) ruby_args=("${ruby_args[@]}" "$1" "$2"); shift ;;
     # Match same switches with argument stuck together
     -e*|-I*|-S*) ruby_args=("${ruby_args[@]}" "$1" ) ;;
     # Abort processing on the double dash
     --) break ;;
     # Other opts go to ruby
     -*) ruby_args=("${ruby_args[@]}" "$1") ;;
     # Abort processing on first non-opt arg
     *) break ;;
    esac
    shift
done

# Append the rest of the arguments
ruby_args=("${ruby_args[@]}" "$@")

declare -a full_command
full_command=("$JAVACMD" $JAVA_OPTS "${java_args[@]}" "-Xbootclasspath/a:$JRUBY_HOME/lib/jruby-truffle.jar" org.truffleruby.Main "-Xhome=$root" "-Xlauncher=$%" "${ruby_args[@]}")

if [ -n "$print_command" ]; then
    echo "${full_command[@]}"
fi

exec "${full_command[@]}"
